name: Build and Release
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: Build for Windows
      run: |
        GOOS=windows GOARCH=amd64 go build -ldflags "-s -w" -o tree-windows-amd64.exe main.go
    - name: Build for MacOS
      run: |
        GOOS=darwin GOARCH=amd64 go build -ldflags "-s -w" -o tree-darwin-amd64 main.go
    - name: Build for Linux
      run: |
        GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o tree-linux-amd64 main.go
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Windows binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: tree-windows-amd64.exe
        asset_name: tree-windows-amd64.exe
        asset_content_type: application/x-msdownload
    - name: Upload MacOS binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{
        steps:
    - name: Upload Linux binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: tree-linux-amd64
        asset_name: tree-linux-amd64
        asset_content_type: application/octet-stream
